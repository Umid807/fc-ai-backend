```python
import base64

encoded_content = "Ly8gYXBwL3NjcmVlbnMvU2V0dGluZ3NTY3JlZW4udHN4CmltcG9ydCBSZWFj\ndCwgeyB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYg\nfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7CiAgVmlldywKICBUZXh0LAogIFNj\ncm9sbFZpZXcsCiAgSW1hZ2UsCiAgVG91Y2hhYmxlT3BhY2l0eSwKICBTd2l0\nY2gsCiAgQWxlcnQsCiAgU3R5bGVTaGVldCwKICBBbmltYXRlZCwKICBNb2Rh\nbCwKICBJbWFnZUJhY2tncm91bmQsCiAgTGlua2luZywKICBQbGF0Zm9ybSwK\nfSBmcm9tICdyZWFjdC1uYXRpdmUnOwppbXBvcnQgeyBUaGVtZUNvbnRleHQg\nfSBmcm9tICdBL2NvbnRleHQvVGhlbWVDb250ZXh0JzsKaW1wb3J0IHsgZ2V0\nQXV0aCwgdXBkYXRlUHJvZmlsZSB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnOwpp\nbXBvcnQgeyB1cGRhdGVEb2MsIGRvYywgb25TbmFwc2hvdCB9IGZyb20gJ2Zp\ncmViYXNlL2ZpcmVzdG9yZSc7CmltcG9ydCB7IGRiIH0gZnJvbSAnQC9hcHAv\nZmlyZWJhc2VDb25maWcnOyAvLyBNYWtlIHN1cmUgdGhpcyBwYXRoIGlzIGNv\ncnJlY3QKaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnZXhwby1yb3V0ZXIn\nOwppbXBvcnQgeyBGb250QXdlc29tZSwgTWF0ZXJpYWxJY29ucywgSW9uaWNv\nbnMgfSBmcm9tICdAZXhwby92ZWN0b3ItaWNvbnMnOwppbXBvcnQgKiBhcyBI\nYXB0aWNzIGZyb20gJ2V4cG8taGFwdGljcyc7CgovLyBJbXBvcnQgeW91ciBp\nMThuIHNldHVwCmltcG9ydCBpMThuIGZyb20gJy4uL2kxOG4vaTE4bic7IC8v\nIEFkanVzdCBwYXRoIGlmIG5lY2Vzc2FyeQoKLy8g4pSA4pSA4pSAIExhbmd1\nYWdlIE9wdGlvbnMg4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSACmNvbnN0IGxhbmd1YWdlT3B0aW9ucyA9IFsKICB7IG5hbWU6ICdFbmcs\nbGlzaCcsIGNvZGU6ICdlbicgfSwKICB7IG5hbWU6ICdGcmFuw6dhaXMnLAog\nIGNvZGU6ICdmcicgfSwKICB7IG5hbWU6ICdFc3Bhw7FvbCcsIGNvZGU6ICdl\ncycgfSwKICB7IG5hbWU6ICfnroDkvZPkuK3mlocnLCBjb2RlOiAnemgtQ04n\nIH0sCiAgeyBuYW1lOiAn57mB6auU5Lit5paHJywgY29kZTogJ3poLVRXJyB9\nLAogIHsgbmFtZTogJ9in2YTYudix2KjZitipJywgY29kZTogJ2FyJyB9LAog\nIHsgbmFtZTogJ0RldXRzY2gnLCBjb2RlOiAnZGUnIH0sCiAgeyBuYW1lOiAn\n5pel5pys6KqeJywgY29kZTogJ2phJyB9LAogIHsgbmFtZTogJ+2VnOq1reyW\ntCcsIGNvZGU6ICdrbycgfSwKXTsKCi8vIOKUgOKUgOKUgCBDdXN0b20gT3B0\naW9uIE1vZGFsIENvbXBvbmVudCDilIDilIDilIDilIDilIDilIDilIDilIDi\nlIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi\nlIDilIDilIDilIDilIDilIDilIAKaW50ZXJmYWNlIEN1c3RvbU9wdGlvbk1v\nZGFsUHJvcHMgewogIHZpc2libGU6IGJvb2xlYW47CiAgdGl0bGU6IHN0cmlu\nZzsKICBvcHRpb25zOiBzdHJpbmdbXTsKICBzZWxlY3RlZE9wdGlvbjogc3Ry\naW5nOwogIG5lb25Db2xvcjogc3RyaW5nOwogIG9uU2VsZWN0OiAob3B0aW9u\nOiBzdHJpbmcpID0+IHZvaWQ7CiAgb25DbG9zZTogKCkgPT4gdm9pZDsKfQoK\nY29uc3QgQ3VzdG9tT3B0aW9uTW9kYWw6IFJlYWN0LkZDPEN1c3RvbU9wdGlv\nbk1vZGFsUHJvcHM+ID0gKHsKICB2aXNpYmxlLAogIHRpdGxlLAogIG9wdGlv\nbnMsCiAgc2VsZWN0ZWRPcHRpb24sCiAgbmVvblNvbG9yLAogIG9uU2VsZWN0\nLAogIG9uQ2xvc2UsCn0pID0+IHsKICBjb25zb2xlLmxvZygiQ3VzdG9tT3B0\naW9uTW9kYWw6IENvbXBvbmVudCBtb3VudGVkIik7CiAgY29uc3Qgc2xpZGVB\nbmltID0gdXNlUmVmKG5ldyBBbmltYXRlZC5WYWx1ZSgwKSkuY3VycmVudDsK\nCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGNvbnNvbGUubG9nKGBDdXN0b21P\ncHRpb25Nb2RhbDogQW5pbWF0aW9uIHRyaWdnZXJlZC4gVmlzaWJsZTogJHtw\nb3NpdGlvbk1vZGFsVmlzaWJsZX0uYCk7CiAgICBBbmltYXRlZC50aW1pbmco\nc2xpZGVBbmltLCB7CiAgICAgIHRvVmFsdWU6IHZpc2libGUgPyAxIDogMCwK\nICAgICAgZHVyYXRpb246IDMwMCwKICAgICAgdXNlTmF0aXZlRHJpdmVyOiB0\ncnVlLAogICAgfSkuYW5kQ2FsbGJhY2soKCkgPT4gewogICAgICBjb25zb2xl\nLmxvZygnQ3VzdG9tT3B0aW9uTW9kYWw6IEFuaW1hdGlvbiBjb21wbGV0ZWQu\nJyk7CiAgICB9KS5zdGFydCgpOwogICAgcmV0dXJuICgpID0+IHsKICAgICAg\nIGNvbnNvbGUubG9nKCdDdXN0b21PcHRpb25Nb2RhbDogQW5pbWF0aW9uIGVs\nZW1lbnRzIGNsZWFudXAuJyk7CiAgICB9OwogIH0sIFt2aXNpYmxlXSk7Cgog\nIC8vIERvIG5vdCByZW5kZXIgaWYgbm90IHZpc2libGUgdG8gYXZvaWQgdW5u\nZWNlc3NhcnkgY29tcHV0YXRpb25zCiAgLy8gaWYgKCF2aXNpYmxlKSByZXR1\nbnMgbnVsbDsgLy8gS2VlcCB0aGlzIGNvbW1lbnRlZCBpZiB5b3UgcHJlZmVy\nIHRoZSBtb2RhbCB0byBhbHdheXMgYmUgaW4gdGhlIHRyZWUgZm9yIGFuaW1h\ndGlvbnMKCiAgcmV0dXJuICgKICAgIDxNb2RhbCB0cmFuc3BhcmVudCB2aXNp\nYmxlPXt2aXNpYmxlfSBhbmltYXRpb25UeXBlPSJub25lIiBvblJlcXVlc3RD\nbG9zZT17KCkgPT4gewogICAgICBjb25zb2xlLmxvZygiQ3VzdG9tT3B0aW9u\nTW9kYWw6IE1vZGFsIHJlcXVlc3RlZCB0byBjbG9zZS4iKTsKICAgICAgb25D\nbG9zZSgpOwogICAgfX0+CiAgICAgIDxUb3VjaGFibGVPcGFjaXR5CiAgICAg\nICAgc3R5bGU9e21vZGFsU3R5bGVzLm1vZGFsQmFja2dyb3VuZH0KICAgICAg\nICBhY3RpdmVPcGFjaXR5PXsxfQogICAgICAgIG9uUHJlc3M9eygpID0+IHsK\nICAgICAgICAgIGNvbnNvbGUubG9nKGBDdXN0b21PcHRpb25Nb2RhbDogQmFj\na2dyb3VuZCBwcmVzc2VkLCBjbG9zaW5nIG1vZGFsLiApOwogICAgICAgICAgb25D\nbG9zZSgpOwogICAgICAgIH0KICAgICAgPgogICAgICAgIDxBbmZtYXRlZC5W\naWV3CiAgICAgICAgICBzdHlsZT17WwogICAgICAgICAgICBtb2RhbFN0eWxl\ncy5tb2RhbENvbnRhaW5lciwKICAgICAgICAgICAgewogICAgICAgICAgICAg\nICAgdHJhbnNmb3JtOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAg\nICAgICAgICAgICB0cmFuc2xhdGVZOiBzbGlkZUFuaW0uaW50ZXJwb2xhdGUo\newogICAgICAgICAgICAgICAgICAgICAgaW5wdXRSYW5nZTogWzAsIDFdLAog\nICAgICAgICAgICAgICAgICAgICBvdXRwdXRSYW5nZTogWzMwMCwgMF0sIC8v\nIFN0YXJ0IGZyb20gZnVydGhlciBkb3duCiAgICAgICAgICAgICAgICAgICAg\nfSksCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIF0sCiAgICAg\nICAgICAgICBib3JkZXJDb2xvcjogbmVvbkNvbG9yLAogICAgICAgICAgICAg\nIHNoYWRvd0NvbG9yOiBuZW9uQ29sb3IsCiAgICAgICAgICAgIH0sCiAgICAg\nICAgX119CiAgICAgICAgPgogICAgICAgICAgPFRleHQgc3R5bGU9e1ttb2Rh\nbFN0eWxlcy5tb2RhbFRpdGxlLCB7IGNvbG9yOiBuZW9uQ29sb3IgfV19Pnt0\naXRsZX08L1RleHQ+CiAgICAgICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbikg\nPT4gKAogICAgICAgICAgICA8VG91Y2hhYmxlT3BhY2l0eQogICAgICAgICAg\nICAgIGtleT17b3B0aW9ufQogICAgICAgICAgICAgIHN0eWxlPXtbCiAgICAg\nICAgICAgICAgICBtb2RhbFN0eWxlcy5vcHRpb25CdXR0b24sCiAgICAgICAg\nICAgICAgICBvcHRpb24gPT09IHNlbGVjdGVkT3B0aW9uICYmIHsKICAgICAg\nICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBuZW9uQ29sb3IgKyAnMzMn\nLCAvLyBTbGlnaHQgaGlnaGxpZ2h0IGZvciBzZWxlY3RlZAogICAgICAgICAg\nICAgICAgICBib3JkZXJDb2xvcjogbmVvbkNvbG9yLAogICAgICAgICAgICAg\nICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgICAgICAgIH0sCiAgICAg\nICAgICAgICAgXX0KICAgICAgICAgICAgICBvblByZXNzPXsoKSA9PiB7CiAg\nICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ3VzdG9tT3B0aW9uTW9kYWw6\nIE9wdGlvbiBzZWxlY3RlZDogJyArIG9wdGlvbik7CiAgICAgICAgICAgICAg\nICBvblNlbGVjdChvcHRpb24pOwogICAgICAgICAgICAgICAgLy8gb25DbG9z\nZSgpOyAvLyBLZWVwIG1vZGFsIG9wZW4gaWYgbmVlZGVkLCBvciBjbG9zZSBh\ncyBpbnRlbmRlZAogICAgICAgICAgICAgIH19CiAgICAgICAgICAgID4KICAg\nICAgICAgICAgICA8VGV4dCBzdHlsZT17bW9kYWxTdHlsZXMub3B0aW9uVGV4\ndH0+e29wdGlvbn08L1RleHQ+CiAgICAgICAgICAgICAge29wdGlvbiA9PT0g\nc2VsZWN0ZWRPcHRpb24gJiYgKAogICAgICAgICAgICAgICAgIDxJb25pY29u\nczogY29sb3I9e25lb25Db2xvcj0gbmFtZT0iY2hlY2ttYXJrLWNpcmNsZSIg\nc2l6ZT0iezIwfSBTdHlsZT17eyBtYXJnaW5MZWZ0OiA4IH19IC8+CiAgICAg\nICAgICAgICApfQogICAgICAgICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+CiAg\nICAgICAgICApKX0KICAgICAgICA8L0FuaW1hdGVkLlZpZXc+CiAgICAgIDwv\nVG91Y2hhYmxlT3BhY2l0eT4KICAgIDwvTW9kYWw+CiAgKTsKfTsKCmNvbnN0\nIG1vZGFsU3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGVoe2AKICBtb2RhbEJh\nY2tncm91bmQ6IHsKICAgIGZsZXg6IDEsCiAgICBiYWNrZ3JvdW5kQ29sb3I6\nICdyZ2JhKDAsIDAsIDAsIDAuNicpJywgLy8gRGFya2VyIGJhY2tncm91bmQK\nICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLAogIH0sCiAgbW9kYWxD\nb250YWluZXI6IHsKICAgIG1hcmdpbkhvcml6b250YWw6IDEwLCAvLyBMZXNz\nIGhvcml6b250YWwgbWFyZ2luCiAgICBtYXJnaW5Cb3R0b206IFBsYXRmb3Jt\nLk9TID09PSAnaW9zJyA/IDMwIDogMjAsIC8vIEFkanVzdCBmb3Igbm90Y2gv\nbmF2YmFyCiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMUExQTFBJywgLy8gRGFy\na2VyIG1vZGFsCiAgICBib3JkZXJSYWRpdXM6IDE1LCAvLyBNb3JlIHJvdW5k\nZWQKICAgIHBhZGRpbmc6IDIwLAogICAgc2hhZG93T2Zmc2V0OiB7IHdpZHRo\nOiAwLCBoZWlnaHQ6IC0yIH0sIC8vIFNoYWRvdyB1cHdhcmRzCiAgICBzaGFk\nb3dPcGFjaXR5OiAwLjUsCiAgICBzaGFkb3dSYWRpdXM6IDE1LAogICAgZWxl\ndmF0aW9uOiAxMCwgLy8gRm9yIEFuZHJvaWQKICAgIGJvcmRlcldpZHRoOiAx\nLAogIH0sCiAgbW9kYWxUaXRsZTogewogICAgZm9udFNpemU6IDIwLCAvLyBM\nYXJnZXIgdGl0bGUKICAgIGZvbnRXZWlnaHQ6ICc2MDAnLCAvLyBTZW1pLWJv\nbGQKICAgIG1hcmdpbkJvdHRvbTogMTUsCiAgICB0ZXh0QWxpZ246ICdjZW50\nZXInLAogIH0sCiAgb3B0aW9uQnV0dG9uOiB7CiAgICBwYWRkaW5nVmVydGlj\nYWw6IDEyLCAvLyBNb3JlIHBhZGRpbmcKICAgIHBhZGRpbmdIb3Jpem9udGFs\nOiAxNSwKICAgIG1hcmdpblZlcnRpY2FsOiA1LAogICAgYm9yZGVyUmFkaXVz\nOiAxMCwKICAgIGJhY2tncm91bmRDb2xvcjogJyMyQzJDMkMnLCAvLyBEYXJr\nZXIgYnV0dG9ucwogICAgZmxleERpcmVjdGlvbjogJ3JvdycsCiAgICBhbGln\nbkl0ZW1zOiAnY2VudGVyJywKICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2Ut\nbmV0d2VlbicsIC8vIEVuc3VyZSBjaGVja21hcmsgaXMgb24gdGhlIHJpZ2h0\nICAgfSwKICBvcHRpb25UZXh0OiB7CiAgICBjb2xvcjogJyNFMEUwRTAnLCAv\nLyBMaWdodGVyIHRleHQgZm9yIGNvbnRyYXN0CiAgICBmb250U2l6ZTogMTcs\nIC8vIExhcmdlciB0ZXh0CiAgfSwKfSk7CgovLyDilIDilIDilIAgTWFpbiBT\ndHlsZXMg4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA\n4pSA4pSA4pSA4pSA4pSACmNvbnN0IGNyZWF0ZVN0eWxlcyA9ICgpID0+CiAg\nU3R5bGVTaGVldC5jcmVhdGUoewogICAgY29udGFpbmVyOiB7CiAgICAgIGZs\nZXg6IDEsCiAgICB9LAogICAgYmFja2dyb3VuZDogewogICAgICBmbGV4OiAx\nLAogICAgICByZXNpemVNb2RlOiAnY292ZXInLAogICAgfSwKICAgIGNhcmRD\nb250YWluZXI6IHsKICAgICAgbWFyZ2luSG9yaXpvbnRhbDogMTYsCiAgICAg\nbWFyZ2luQm90dG9tOiAyMCwKICAgICAgYm9yZGVyUmFkaXVzOiAxMi4gLy8g\nTW9yZSByb3VuZGVkIGNhcmRzCiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJywK\nICAgICAgc2hhZG93Q29sb3I6ICcjMDBFNUZGJywKICAgICAgc2hhZG93T2Zm\nc2V0OiB7IHdpZHRoOiAwLCBoZWlnaHQ6IDIgfSwgLy8gU29mdGVyIHNoYWRv\ndwogICAgICBzaGFkb3dPcGFjaXR5OiAwLjYsIC8vIExlc3MgaW50ZW5zZSBz\naGFkb3cKICAgICAgc2hhZG93UmFkaXVzOiA4LCAgLy8gU21hbGxlciByYWRp\ndXMKICAgICAgZWxldmF0aW9uOiA1LCAgICAvLyBBZGp1c3RlZCBlbGV2YXRp\nb24gZm9yIEFuZHJvaWQKICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgIGJv\ncmRlckNvbG9yOiAncmdiYSgwLCAyMjksIDI1NSwgMC4yKScsIC8vIFN1YnRs\nZSBib3JkZXIgYXRjaGluZyBuZW9uCiAgfX0sCiAgICBjYXJkQ29udGVudDoge\nQogICAgICBwYWRkaW5nOiAxNiwKICAgICAgYmFja2dyb3VuZENvbG9yOiAn\ncmdiYSgyMCwgMjAsIDIwLCAwLjg1KScsIC8vIERhcmtlciwgbW9yZSBvcGFx\ndWUgYmFja2dyb3VuZCBmb3IgcmVhZGFiaWxpdHkKICAgIH0sCiAgICBzZWN0\naW9uSGVhZGVyOiB7CiAgICAgIGZvbnRTaXplOiAyMCwKICAgICAgZm9udFdl\naWdodDogJ2JvbGQnLAogICAgICBtYXJnaW5Cb3R0b206IDEyLAogICAgICBj\nb2xvcjogJyMwMEU1RkYnLCAvLyBEZWZhdWx0IG5lb24gY29sb3IKICAgICAg\ndGV4dFNoYWRvd0NvbG9yOiAnIzAwRTVGRicsCiAgICAgIHRleHRTaGFkb3dP\nZmZzZXQ6IHsgd2lkdGg6IDAsIGhlaWdodDogMCAwfSwKICAgICAgdGV4dFNo\nYWRvd1JhZGl1czogOCwgLy8gU2xpZ2h0bHkgc21hbGxlciBnbG93CiAgfSwK\nICAgIHNldHRpbmdJdGVtOiB7CiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cn\nLAogICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJywKICAgICAgYmFja2dyb3Vu\nZENvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KScsIC8vIFZlcnkg\nc3VidGxlIGJhY2tncm91bmQKICAgICAgcGFkZGluZ1ZlcnRpY2FsOiAxMiwK\nICAgICAgcGFkZGluZ0hvcml6b250YWw6IDEwLAogICAgICBib3JkZXJSYWRp\ndXM6IDgsCiAgICAgIG1hcmdpbkJvdHRvbTogMTAsCiAgICB9LAogICAgc2V0\ndGluZ1RpdGxlOiB7CiAgICAgIGZsZXg6IDEsCiAgICAgIGZvbnRTaXplOiAx\nNiwKICAgICAgY29sb3I6ICcjRTAwRTAwJywgLy8gTGlnaHRlciB0ZXh0CiAg\nICAgIG1hcmdpbkxlZnQ6IDEyLCAvLyBNb3JlIHNwYWNpbmcgZnJvbSBpY29u\nICAgfSwKICAgIHNldHRpbmdWYWx1ZTogeSAgLy8gRm9yIGRpc3BsYXlpbmcg\nc2VsZWN0ZWQgbGFuZ3VhZ2UKICAgICAgZm9udFNpemU6IDE2LAogICAgICBj\nb2xvcjogJyMwMEU1RkYnLCAvLyBOZW9uIGNvbG9yIGZvciB0aGUgdmFsdWUK\nICAgICAgbWFyZ2luUmlnaHQ6IDgsCiAgfX0sCiAgICBpY29uOiB7CiAgICAg\nIHdpZHRoOiAyNCwgLy8gU3RhbmRhcmRpc2VkIGljb24gd2lkdGgKICAgICAg\nYWxpZ25JdGVtczogJ2NlbnRlcnUnLAogICAgfSwKICAgIHByb2ZpbGVDYXJk\nOiB7CiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLAogICAgICBhbGlnbkl0\nZW1zOiAnY2VudGVyJywKICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgw\nLDAsMCwwLjUpJywgLy8gRGFya2VyIHByb2ZpbGUgY2FyZAogICAgICBwYWRk\naW5nOiAxNiwKICAgICAgYm9yZGVyUmFkaXVzOiAxMiwKICAgICAgbWFyZ2lu\nQm90dG9tOiAyMCwKICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsCiAgICAg\nIGJvcmRlcldpZHRoOiAxLAogICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjU1\nLCAyMTUsIDAsIDAuMyknLCAvLyBTdWJ0bGUgZ29sZCBib3JkZXIKICAgIH0s\nCiAgICBwcm9maWxlSW1hZ2U6IHsKICAgICAgd2lkdGg6IDcwLCAvLyBTbGln\naHRseSBzbWFsbGVyCiAgICAgIGhlaWdodDogNzAsCiAgICAgIGJvcmRlclJh\nZGl1czogMzUsCiAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICBib3JkZXJD\nb2xvcjogJyNGRkQ3MDAnLCAvLyBHb2xkIGJvcmRlchogICAgfSwKICAgIHBy\nb2ZpbGVJbmZvOiB7CiAgICAgIGZsZXg6IDEsCiAgICAgIG1hcmdpbkxlZnQ6\nIDE2LAogICAgfSwKICAgIHByb2ZpbGVOYW1lOiB7CiAgICAgIGZvbnRTaXpl\nOiAyMCwKICAgICAgZm9udFdlaWdodDogJ2JvbGQnLAogICAgICBjb2xvcjog\nJyNGRkYnLAogICAgfSwKICAgIGVkaXRQcm9maWxlOiB7CiAgICAgIHBvc2l0\naW9uOiAnYWJzb2x1dGUnLAogICAgICB0b3A6IDEyLAogICAgICByaWdodDog\nMTIsCiAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLAogICAgICBhbGlnbkl0\nZW1zOiAnY2VudGVyJywKICAgICAgcGFkZGluZzogNiwgLy8gQWRkIHBhZGRp\nbmggZm9yIGVhc2llciB0YXAKICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdi\nYSAwLCAwLCAwLCAwLjMpJywKICAgICAgYm9yZGVyUmFkaXVzOiA2LAogICAg\nfSwKICAgIGVkaXRQcm9maWxlVGV4dDogeQogICAgICBmb250U2l6ZTogMTIs\nCiAgICAgIGNvbG9yOiAnIzAwRTVGRicsCiAgICAgIG1hcmdpbVJpZ2h0OiA0\nLAogICAgfSwKICB9KTsKCi8vIOKUgOKUgOKUgCBNYWluIENvbXBvbmVudCDi\nlIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi\nlIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi\nlIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAK\nZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2V0dGluZ3NTY3JlZW4oKSB7CiAg\nIGNvbnNvbGUubG9nKCJTZXR0aW5nc1NjcmVlbjogQ29tcG9uZW50IG1vdW50\nZWQgc3VjY2Vzc2Z1bGx5LiIpOwogIGNvbnN0IHsgaXNEYXJrTW9kZSB9ID0g\ndXNlQ29udGV4dChUaGVtZUNvbnRleHQpOwogIGNvbnN0IGF1dGggPSBnZXRB\ndXRoKCk7CiAgY29uc3QgY3VycmVudFVzZXIgPSBhdXRoLmN1cnJlbnRVc2Vy\nOwogIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpOwoKICAvLyBMb2NhbCBz\ndGF0ZSBmb3Igc2V0dGluZ3MKICBjb25zdCBbdXNlcm5hbWUsIHNldFVzZXJu\nYW1lXSA9IHVzZVN0YXRlKAogICAgY3VycmVudFVzZXIgPyBjdXJyZW50VXNl\nci5kaXNwbGF5TmFtZSB8fCBpMThuLnQoJ3NldHRpbmdzLmRlZmF1bHRVc2Vy\nbmFtZScpIDogaTE4bi50KCdzZXR0aW5ncy5ub3RMb2dnZWRJbicpCiAgKTsK\nICBjb25zb2xlLmxvZyggYFNldHRpbmdzU2NyZWVuOiBVc2VybmFtZSBzdGF0\nZSBpbml0aWFsaXplZC4gVXNlcm5hbWU6ICR7dXNlcm5hbWV9YCk7CiAgLy8g\nTkVXOiBMYW5ndWFnZSBzdGF0ZQogIGNvbnN0IFtzZWxlY3RlZExhbmd1YWdl\nQ29kZSwgc2V0U2VsZWN0ZWRMYW5ndWFnZUNvZGVdID0gdXNlU3RhdGUoaTE4\nbn4ubGFuZ3VhZ2UpOwogIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjog\nTGFuZ3VhZ2Ugc3RhdGUgaW5pdGlhbGl6ZWQuIENvZGU6ICR7c2VsZWN0ZWRM\nYW5ndWFnZUNvZGV9YCk7CiAgY29uc3QgW2xhbmd1YWdlTW9kYWxWaXNpYmxl\nLCBzZXRMYW5ndWFnZU1vZGFsVmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7\nICBjb25zb2xlLmxvZygnU2V0dGluZ3NTY3JlZW46IExhbmd1YWdlIG1vZGFs\nIHZpc2liaWxpdHkgc3RhdGUgaW5pdGlhbGl6ZWQ6IGZhbHNlLicpOwoKICBj\nb25zdCBbZm9ydW1Ob3RpZmljYXRpb25zLCBzZXRGb3J1bU5vdGlmaWNhdGlv\nbnNdID0gdXNlU3RhdGUodHJ1ZSk7CiAgY29uc29sZS5sb2coYFNldHRpbmdz\nU2NyZWVuOiBGb3J1bSBub3RpZmljYXRpb25zIHN0YXRlIGluaXRpYWxpemVk\nOiAke2ZvcnVtTm90aWZpY2F0aW9uc31gKTsKICBjb25zdCBbZ2FtZVVwZGF0\nZXMsIHNldEdhbWVVcGRhdGVzXSA9IHVzZVN0YXRlKHRydWUpOwogIGNvbnNv\nbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogR2FtZSB1cGRhdGVzIHN0YXRlIGlu\naXRpYWxpemVkOiAke2dhbWVVcGRhdGVzfWAgKTsKICBjb25zdCBbcmFmZmxl\nUmVtaW5kZXJzLCBzZXRSYWZmbGVSZW1pbmRlcnNdID0gdXNlU3RhdGUoZmFs\nc2UpOwogIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogUmFmZmxlIHJl\nbWluZGVycyBzdGF0ZSBpbml0aWFsaXplZDogJHtyYWZmbGVSZW1pbmRlcnN9\nYCk7CiAgY29uc3QgW2RhaWx5Q2hhbGxlbmdlUmVtaW5kZXJzLCBzZXREYWls\neUNoYWxsZW5nZVJlbWluZGVyc10gPSB1c2VTdGF0ZSh0cnVlKTsKICBjb25z\nb2xlLmxvZyhgc2V0dGluZ3NTY3JlZW46IERhaWx5IGNoYWxsZW5nZSByZW1p\nbmRlcnMgc3RhdGUgaW5pdGlhbGl6ZWQ6ICR7ZGFpbHlDaGFsbGVuZ2VSZW1p\nbmRlcnN9YCk7CiAgY29uc3QgW3ZpZXdQb3N0c09wdGlvbiwgc2V0Vmlld1Bv\nc3RzT3B0aW9uXSA9IHVzZVN0YXRlPCdQdWJsaWMnIHwgJ0ZyaWVuZHMgT25s\neScgfCAnUHJpdmF0ZSc+KCdQdWJsaWMnKTsKICBjb25zb2xlLmxvZyhgc2V0\ndGluZ3NTY3JlZW46IFZpZXcgcG9zdHMgb3B0aW9uIHN0YXRlIGluaXRpYWxp\nemVkOiAke3ZpZXdQb3N0c09wdGlvbn1gKTsKICBjb25zdCBbcmVwbHlQb3N0\nc09wdGlvbiwgc2V0UmVwbHlQb3N0c09wdGlvbl0gPSB1c2VTdGF0ZTwnRXZl\ncnlvbmUnIHwgJ09ubHkgRm9sbG93ZXJzJyB8ICdObyBPbmUnPignRXZlcnlv\nbmUnKTsKICBjb25zb2xlLmxvZyhgc2V0dGluZ3NTY3JlZW46IFJlcGx5IHBv\nc3RzIG9wdGlvbiBzdGF0ZSBpbml0aWFsaXplZDogJHtyZXBseVBvc3RzT3B0\naW9ufWAgKTsKICBjb25zdCBbc2hvd1JlcHV0YXRpb24sIHNldFNob3dSZXB1\ndGF0aW9uXSA9IHVzZVN0YXRlKHRydWUpOwogIGNvbnNvbGUubG9nKGBTZXR0\naW5nc1NjcmVlbjogU2hvdyByZXB1dGF0aW9uIHN0YXRlIGluaXRpYWxpemVk\nOiAke3Nob3dSaGFuZ2V9YCk7CiAgY29uc3QgW3Nob3dSYW5rLCBzZXRTaG93\nUmFuayldID0gdXNlU3RhdGUodHJ1ZSk7CiAgY29uc29sZS5sb2coYFNldHRp\nbmdzU2NyZWVuOiBTaG93IHJhbmsgc3RhdGUgaW5pdGlhbGl6ZWQ6ICR7c2hv\nd1JhbmtofWApOwoKICBjb25zdCBbdmlld09wdGlvbk1vZGFsVmlzaWJsZSwg\nc2V0Vmlld09wdGlvbk1vZGFsVmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7\nICBjb25zb2xlLmxvZygnU2V0dGluZ3NTY3JlZW46IFZpZXcgb3B0aW9uIG1v\nZGFsIHZpc2liaWxpdHkgc3RhdGUgaW5pdGlhbGl6ZWQ6IGZhbHNlLicpOwog\nIGNvbnN0IFtyZXBseU9wdGlvbk1vZGFsVmlzaWJsZSwgc2V0UmVwbHlPcHRp\nb25Nb2RhbFZpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpOwogIGNvbnNvbGUu\nbG9nKCdTZXR0aW5nc1NjcmVlbjogUmVwbHkgb3B0aW9uIG1vZGFsIHZpc2li\naWxpdHkgc3RhdGUgaW5pdGlhbGl6ZWQ6IGZhbHNlLicpOwoKICBjb25zdCBz\ndHlsZXMgPSBjcmVhdGVTdHlsZXMoKTsKICBjb25zdCBmYWRlQW5pbSA9IHVz\nZVJlZihuZXcgQW5pbWF0ZWQuVmFsdWUoMCkpLmN1cnJlbnQ7CgogIHVzZUVm\nZmVjdCgoKSA9PiB7CiAgICBjb25zb2xlLmxvZygiU2V0dGluZ3NTY3JlZW46\nIEZhZGUgYW5pbWF0aW9uIHRyaWdnZXJlZC4iKTsKICAgIEFuaW1hdGVkLnRp\nbWluZyhmYWRlQW5pbSwgewogICAgICB0b1ZhbHVlOiAxLAogICAgICBkdXJh\ndGlvbjogNTAwLAogICAgICB1c2VOYXRpdmVEcml2ZXI6IHRydWUsCiAgICB9\nKS5zdGFydCgpOwogICAgcmV0dXJuICgpID0+IHsKICAgICAgY29uc29sZS5s\nb2coJ1NldHRpbmdzU2NyZWVuOiBGZWRlIGFuaW1hdGlvbiBjbGVhbnVwLicp\nOwogICAgfTsKICB9LCBbXSk7CgogIC8vIExpc3RlbiBmb3IgRmlyZXN0b3Jl\nIHVwZGF0ZXMgYW5kIGluaXRpYWxpemUgbGFuZ3VhZ2UKICB1c2VFZmZlY3Qo\nKCkgPT4gewogICAgY29uc29sZS5sb2coJ1NldHRpbmdzU2NyZWVuOiBVc2VF\nZmZlY3QgdHJpZ2dlcmVkIGZvciBkYXRhIGZldGNoaW5nIGFuZCBsYW5ndWFn\nZSBpbml0aWFsaXphdGlvbi4gQ3VycmVudCBVc2VyOiAnICsgKGN1cnJlbnRV\nc2VyID8gJ2V4aXN0cycgOiAnZG9lcyBub3QgZXhpc3QnKSk7CiAgICBpZiAo\nY3VycmVudFVzZXIpIHsKICAgICAgY29uc29sZS5sb2coYFNldHRpbmdzU2Ny\nZWVuOiBGZXRjaGluZyB1c2VyIGRvY3VtZW50IGZvciB1c2VyIHVpZDogJHti\nXVNlckdJZC4nKTsKICAgICAgY29uc3QgdXNlckRvY1JlZiA9IGRvYyhkYiwg\nJ3VzZXJzJywgY3VycmVudFVzZXIudWlkKTsKICAgICAgY29uc3QgdW5zdWJz\nY3JpYmUgPSBvblNuYXBzaG90KHVzZXJEb2NSZWYsIChkY1NuYXBzaG90KSA9\nPiB7CiAgICAgICAgY29uc29sZS5sb2coJ1NldHRpbmdzU2NyZWVuOiBGcmVz\ndGFyZSBkYXRhIHNuYXBzaG90IHJlY2VpdmVkLicpOwogICAgICAgIGNvbnN0\nIGRhdGEgPSBkb2NTbmFwc2hvdC5kYXRhKCk7CiAgICAgICAgaWYgKGRhdGEp\nIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogVXNl\nciBkYXRhIGxvYWRlZDogJHtqc29uLnN0cmluZ2lmeShkYXRhKX0uYCk7CiAg\nICAgICAgICAgc2V0VXNlcm5hbWUoZGF0YS51c2VybmFtZSA/PyAoY3VycmVu\ndFVzZXIuZGlzcGxheU5hbWUgZmFpMThuLnQoJ3NldHRpbmdzLmRlZmF1bHRV\nc2VybmFtZScpKSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5n\nc1NjcmVlbjogVXNlcm5hbWUgc3RhdGUgdXBkYXRlZDogJHtyaHVzZXJuYW1l\nfWApOwogICAgICAgICAgc2V0Rm9ydW1Ob3RpZmljYXRpb25zKGRhdGEuZm9y\ndW1Ob3RpZmljYXRpb25zID8/IHRydWUpOwogICAgICAgICAgY29uc29sZS5s\nb2coYFNldHRpbmdzU2NyZWVuOiBGb3J1bSBub3RpZmljYXRpb25zIHN0YXRl\nIHVwZGF0ZWQ6ICR7Zm9ydW1Ob3RpZmljYXRpb25zfWApOwogICAgICAgICAg\nc2V0R2FtZVVwZGF0ZXMoZGF0YS5nYW1lVXBkYXRlcyA/PyB0cnVlKTsKICAg\nICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogR2FtZSB1cGRh\ndGVzIHN0YXRlIHVwZGF0ZWQ6ICR7Z2FtZVVwZGF0ZXN9YCk7CiAgICAgICAg\nICAgc2V0UmFmZmxlUmVtaW5kZXJzKGRhdGEucmFmZmxlUmVtaW5kZXJzID8/\nIGZhbHNlKTsKICAgICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVl\nbjogUmFmZmxlIHJlbWluZGVycyBzdGF0ZSB1cGRhdGVkOiAke3JhZmZsZVJl\nbWluZGVyc31gKTsKICAgICAgICAgIHNldERhaWx5Q2hhbGxlbmdlUmVtaW5k\nZXJzKGRhdGEuZGFpbHlDaGFsbGVuZ2VSZW1pbmRlcnMgPz8gdHJ1ZSk7CiAg\nICAgICAgICAgY29uc29sZS5sb2coYFNldHRpbmdzU2NyZWVuOiBEYWlseSBj\naGFsbGVuZ2UgcmVtaW5kZXJzIHN0YXRlIHVwZGF0ZWQ6ICR7ZGFpbHlDaGFs\nbGVuZ2VSZW1pbmRlcnN9YCk7CiAgICAgICAgICAgIHNldFZpZXdQb3N0c09w\ndGlvbihkYXRhLnZpZXdQb3N0c09wdGlvbiA/PyAnUHVibGljJyk7CiAgICAg\nICAgICAgY29uc29sZS5sb2coYFNldHRpbmdzU2NyZWVuOiBWaWV3IHBvc3Rz\nIG9wdGlvbiBzdGF0ZSB1cGRhdGVkOiAke3ZpZXdQb3N0c09wdGlvbn1gKTsK\nICAgICAgICAgIHNldFJlcGx5UG9zdHNPcHRpb24oZGF0YS5yZXBseVBvc3Rz\nT3B0aW9uID8/ICdFdmVyeW9uZScpOwogICAgICAgICAgY29uc29sZS5sb2co\nYGxldHRpbmdzU2NyZWVuOiBSZXBseSBwb3N0cyBvcHRpb24gc3RhdGUgdXBk\nYXRlZDogJHtyZXBseVBvc3RzT3B0aW9ufWApOwogICAgICAgICAgc2V0U2hv\nd1JlcHV0YXRpb24oZGF0YS5zaG93UmVwdXRhdGlvbiA/PyB0cnVlKTsKICAg\nICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogU2hvdyByZXB1\ndGF0aW9uIHN0YXRlIHVwZGF0ZWQ6ICR7c2hvd1JlcHV0YXRpb259YCk7CiAg\nICAgICAgICAgc2V0U2hvd1JhbmsoZGF0YS5zaG93UmFuayA/PyB0cnVlKTsK\nICAgICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogU2hvdyBy\nYW5rIHN0YXRlIHVwZGF0ZWQ6ICR7c2hvd1JhbmtofWApOwoKICAgICAgICAg\nIC8vIExvYWQgYW5kIHNldCBsYW5ndWFnZQogICAgICAgICAgY29uc3Qgc2F2\nZWRMYW5nQ29kZSA9IGRhdGEubGFuZ3VhZ2UgfHwgJ2VuJzsgLy8gRGVmYXVs\ndCB0byBFbmdsaXNoIGlmIG5vdCBzZXQKICAgICAgICAgIGNvbnNvbGUubG9n\nKGBTZXR0aW5nc1NjcmVlbjogU2F2ZWQgbGFuZ3VhZ2UgY29kZSBmcm9tIERC\nOiAke3NhdmVkTGFuZ0NvZGV9LgogICAgICAgICAgaWYgKHNhdmVkTGFuZ0N\nb2RlICE9PSBpMThuLmxhbmd1YWdlKSB7CiAgICAgICAgICAgIGNvbnNvbGUu\nbG9nKGBTZXR0aW5nc1NjcmVlbjogQ2hhbmdpbmcgaTE4biBsYW5ndWFnZSBm\ncm9tICR7aTE4bi5sYW5ndWFnZX0gdG8gJHtzYXZlZExhbmdDb2RlfS4nKTsK\nICAgICAgICAgICAgaTE4bi5jaGFuZ2VMYW5ndWFnZShzYXZlZExhbmdDb2Rl\nKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1Nl\ndHRpbmdzU2NyZWVuOiBpMThuIGxhbmd1YWdlIGNoYW5nZWQgc3VjY2Vzc2Z1\nbGx5LicpOwogICAgICAgICAgICAgICBzZXRTZWxlY3RlZExhbmd1YWdlQ29k\nZShzYXZlZExhbmdDb2RlKTsKICAgICAgICAgICAgICAgY29uc29sZS5sb2co\nYGxldHRpbmdzU2NyZWVuOiBTZWxlY3RlZCBsYW5ndWFnZSBjb2RlIHVwZGF0\nZWQgdG86ICR7c2VsZWN0ZWRMYW5ndWFnZUNvZGV9LmApOwogICAgICAgICAg\nICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnNvbGUu\nbG9nKCdTZXR0aW5nc1NjcmVlbjogTGFuZ3VhZ2UgYWxyZWFkeSBtYXRjaGVz\nLCBubyBjaGFuZ2UgbmVlZGVkLicpOwogICAgICAgICAgICBzZXRTZWxlY3Rl\nZExhbmd1YWdlQ29kZShzYXZlZExhbmdDb2RlKTsKICAgICAgICAgICAgY29u\nc29sZS5sb2coYGxldHRpbmdzU2NyZWVuOiBTZWxlY3RlZCBsYW5ndWFnZSBj\nb2RlIHVwZGF0ZWQgdG86ICR7c2VsZWN0ZWRMYW5ndWFnZUNvZGV9LmApOwog\nICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xl\nLmxvZygnU2V0dGluZ3NTY3JlZW46IE5vIHVzZXIgZGF0YSBmb3VuZC4gU2V0\ndGluZyBkZWZhdWx0IGxhbmd1YWdlIHRvICdlbicuJyk7CiAgICAgICAgICAg\nLy8gSWYgbm8gZGF0YSwgc2V0IGRlZmF1bHQgbGFuZ3VhZ2UKICAgICAgICAg\nICBpZiAoaTE4bi5sYW5ndWFnZSAhPT0gJ2VuJykgewogICAgICAgICAgICAg\nIGkxOG4uY2hhbmdlTGFuZ3VhZ2UoJ2VuJykudGhlbigoKSA9PiB7CiAgICAg\nICAgICAgICAgICBjb25zb2xlLmxvZygnU2V0dGluZ3NTY3JlZW46IERlZmF1\nbHQgbGFuZ3VhZ2UgY2hhbmdlZCB0byAnZW4nLicpOwogICAgICAgICAgICAg\nICBzZXRTZWxlY3RlZExhbmd1YWdlQ29kZShlbnUpOwogICAgICAgICAgICAg\nIH0pOwogICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnNvbGUu\nbG9nKCdTZXR0aW5nc1NjcmVlbjogRGVmYXVsdCBsYW5ndWFnZSBhbHJlYWR5\nc2V0IHRvICdlbicuJyk7CiAgICAgICAgICAgIHNldFNlbGVjdGVkTGFuZ3Vh\nZ2VDb2RlKCdlbicpOwogICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0p\nOwogICAgICByZXR1cm4gKCkgPT4gewogICAgICAgY29uc29sZS5sb2coJ1Nl\ndHRpbmdzU2NyZWVuOiBPblNuYXBzaG90IHVuc3Vic2NyaWJlIGZsZXggY2xl\nYW51cC4nKTsKICAgICAgIHVuU3Vic2NyaWJlKCk7CiAgICB9OwogIH0sIFtj\ndXJyZW50VXNlcl0pOwoKICBjb25zdCB1cGRhdGVVc2VyU2V0dGluZyA9IGFz\neW5jIChmaWVsZDogc3RyaW5nLCB2YWx1ZTogYW55KSA9PiB7CiAgICBjb25z\nb2xlLmxvZyhgU2V0dGluZ3NTY3JlZW46IHVwZGF0ZVVzZXJTZXR0aW5nIGNh\nbGxlZCBmb3IgZmllbGQgJyR7ZmllbGR9JzogJHt2YWx1ZX0uYCk7CiAgICBp\nZiAoY3VycmVudFVzZXIpIHsKICAgICAgY29uc29sZS5sb2coJ1NldHRpbmdz\nU2NyZWVuOiBQcm9jZWVkZSAgdXBnZGF0aW5nIHVzZXIgZG9jdW1lbnQuJyk7\nICAgICAgdHJ5IHsKICAgICAgICBjb25zb2xlLmxvZygnU2V0dGluZ3NTY3Jl\nZW46IFNlbmRpbmcgZGF0YSB0byBGaXJlc3RvcmUuJyBOY2V3IGZpZWxkOiAg\nJCtfZmllbGR9Lyd2YWx1ZTogJHtzY3J1YmxlfWApOwogICAgICAgIGF3YWl0\nIHVwZGF0ZURvYyhkb2MoZGIsICd1c2VycycsIGN1cnJlbnRVc2VyLnVpZCks\nIHsgW2ZpZWxkXTogdmFsdWUgfSk7CiAgICAgICAgY29uc29sZS5sb2coJ1Nl\ndHRpbmdzU2NyZWVuOiBVc2VyIHNldHRpbmcgZGVwZGF0ZWQgc3VjY2Vzc2Z1\nbGx5LicpOwogICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7CiAgICAgICAg\nIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogRXJyb3IgdXBkYXRpbmcg\ndXNlciBzZXR0aW5nOiAke2Vycm9yLm1lc3NhZ2V9LmApOwogICAgICAgIEFs\nZXJ0LmFsZXJ0KGkxOG4udCgnc2V0dGluZ3MuZXJyb3JBbGVydFRpdGxlJyks\naTE4bi50KCdzZXR0aW5ncy5lcnJvclVwZGF0aW5nU2V0dGluZycgKyBlcnJv\nci5tZXNzYWdlKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgY29uc29s\nZS5sb2coJ1NldHRpbmdzU2NyZWVuOiBXYXJuaW5nIG5vdCBsb2dnZWQgaW4u\nIENhbm5vdCB1cGRhdGUgc2V0dGluZ3MuJyk7CiAgICAgIEFsZXJ0LmFsZXJ0\nKGkxOG4udCgnc2V0dGluZ3Mubm90TG9nZ2VkSW5UaXRsZScpLCBpMThuLnQo\nJ3NldHRpbmdzLm5vdExvZ2dlZEluTWVzc2FnZScpKTsKICAgIH0KICB9Owog\nCmNvbnN0IHRyaWdnZXJIYXB0aWMgPSAoKSA9PiB7CiAgICBjb25zb2xlLmxv\nZygnU2V0dGluZ3NTY3JlZW46IFRyaWdnZXJpbmcgaGFwdGljIGZlZWRiYWNr\nLicpOwogICAgSGFwdGljcy5zZWxlY3Rpb25Bc3luYygpOwogIH07CgogIGNv\nbnN0IGhhbmRsZVByb2ZpbGVQcmVzcyA9ICgpID0+IHsKICAgIGNvbnNvbGUu\nbG9nKCdTZXR0aW5nc1NjcmVlbjogSGFuZGxpbmcgcHJvZmlsZSBwcmVzcyBh\nbmQgbmF2aWdhdGluZy4nKTsKICAgIHRyaWdnZXJIYXB0aWMoKTsKICAgIHJv\ndXRlci5wdXNoKCcvc2NyZWVucy9Vc2VyUHJvZmlsZVNjcmVlbicpOyAvLyBF\nbnN1cmUgdGhpcyByb3V0ZSBleGlzdHMKICB9OwogCmNvbnN0IGhhbmRsZUNo\nYW5nZVVzZXJuYW1lID0gKCkgPT4gewogICAgY29uc29sZS5sb2coJ1NldHRp\nbmdzU2NyZWVuOiBIYW5kbGluZyBjaGFuZ2UgdXNlcm5hbWUgcHJvbXB0Licp\nOwogICAgdHJpZ2dlckhhcHRpYygpOwogICAgQWxlcnQucHJvbXB0KAogICAg\nICBpMThuLnQoJ3NldHRpbmdzLmNoYW5nZVVzZXJuYW1lVGl0bGUnKSwKICAg\nICAgaTE4bi50KCdzZXR0aW5ncy5jaGFuZ2VVc2VybmFtZU1lc3NhZ2UnKSwK\nICAgICAgYXN5bmMgKG5ld1VzZXJuYW1lKSA9PiB7CiAgICAgICAgY29uc29s\nZS5sb2coYEhvbWVTY3JlZW46IEFsZXJ0IHByb21wdCByZXNwb25zZSByZWNl\naXZlZDogJHtuZXdVc2VybmFtZX1gKTsKICAgICAgICBpZiAoIW5ld1VzZXJu\nYW1lIHx8IG5ld1VzZXJuYW1lLnRyaW0oKSA9PT0gJycpIHsKICAgICAgICAg\nIGNvbnNvbGUubG9nKCdTZXR0aW5nc1NjcmVlbjogVmFsaWRhdGlvbiBmYWls\nZWQ6IFVzZXJuYW1lIGNhbm5vdCBiZSBlbXB0eS4nKTsKICAgICAgICAgIEFs\nZXJ0LmFsZXJ0KGkxOG4udCgnc2V0dGluZ3MuaW52YWxpZElucHV0VGl0bGUn\nKSwgaTE4bi50KCdzZXR0aW5ncy51c2VybmFtZUNhbm5vdEJlRW1wdHknKSk7\nCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGlmIChjdXJy\nZW50VXNlcikgewogICAgICAgICAgY29uc29sZS5sb2coYEhvbWVTY3JlZW46\nIFVwZGF0aW5nIHVzZXIgZGlzcGxheSBuYW1lIHRvOiAke25ld1VzZXJuYW1l\nfWApOwogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgYXdhaXQgdXBkYXRl\nUHJvZmlsZShjdXJyZW50VXNlciwgeyBkaXNwbGF5TmFtZTogbmV3VXNlcm5h\nbWUgfSk7CiAgICAgICAgICAgIHNldFVzZXJuYW1lKG5ld1VzZXJuYW1lKTsK\nICAgICAgICAgICAgYXdhaXQgdXBkYXRlVXNlckVldHRpbmdzKCd1c2VybmFt\nZScsIG5ld1VzZXJuYW1lKTsKICAgICAgICAgICAgQWxlcnQuYWxlcnQoaTE4\nbi50KCdzZXR0aW5ncy5zdWNjZXNzQWxlcnRUaXRsZScpLCBpMThuLnQoJ3Nl\ndHRpbmdzLnVzZXJuYW1lVXBkYXRlZFN1Y2Nlc3MnKSk7CiAgICAgICAgICAg\nIGNvbnNvbGUubG9nKCdTZXR0aW5nc1NjcmVlbjogVXNlcm5hbWUgdXBkYXRl\nZCBzdWNjZXNzZnVsbHkuJyk7CiAgICAgICAgICB9IGNhdGNoIChlcnJvcjog\nYW55KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVl\nbjogRXJyb3IgdXBkYXRpbmcgZGlzcGxheSBuYW1lOiAke2Vycm9yLm1lc3Nh\nZ2V9YCk7CiAgICAgICAgICAgIEFsZXJ0LmFsZXJ0KGkxOG4udCgnc2V0dGlu\nZ3MuZXJyb3JBbGVydFRpdGxlJyksIGVycm9yLm1lc3NhZ2UpOwogICAgICAg\nICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygn\nU2V0dGluZ3NTY3JlZW46IENhbm5vdCBjaGFuZ2UgdXNlcm5hbWUgZm9yIG5v\nbi1sb2dnZWQtaW4gdXNlci4nKTsKICAgICAgICAgIEFsZXJ0LmFsZXJ0KGkx\nOG4udCgnc2V0dGluZ3MuZXJyb3JBbGVydFRpdGxlJyksIGkxOG4udCgnc2V0\ndGluZ3Mubm90TG9nZ2VkSW5NZXNzYWdlJykpOwogICAgICAgIH0KICAgICAg\nfSwKICAgICAgJ3BsYWluLXRleHQnLAogICAgICB1c2VybmFtZQogICAgKTsK\nICB9OwogCmNvbnN0IGhhbmRsZUxhbmd1YWdlU2VsZWN0ID0gYXN5bmMgKHNl\nbGVjdGVkTmFtZTogc3RyaW5nKSA9PiB7CiAgICBjb25zb2xlLmxvZygnU2V0\ndGluZ3NTY3JlZW46IEhhbmRsZSBsYW5ndWFnZSBzZWxlY3QgY2FsbGVkLiBT\nZWxlY3RlZCBOYW1lOiAnICsgc2VsZWN0ZWROYW1lKTsKICAgIHRyaWdnZXJI\nYXB0aWMoKTsKICAgIGNvbnN0IHNlbGVjdGVkTGFuZyA9IGxhbmd1YWdlT3B0\naW9ucy5maW5kKGxhbmcgPT4gbGFuZy5uYW1lID09PSBzZWxlY3RlZE5hbWUp\nOwogICAgY29uc29sZS5sb2coYEhvbWVTY3JlZW46IEZvdW5kIHNlbGVjdGVk\nIGxhbmd1YWdlIG9wdGlvbjogJHtzZWxlY3RlZExhbmcuY29kZX1gKTsKICAg\nIGlmIChzZWxlY3RlZExhbmcpIHsKICAgICAgY29uc29sZS5sb2coYEhvbWVTY3Jl\nZW46IENoYW5naW5nIGxhbmd1YWdlIHRvOiAke3NlbGVjdGVkTGFuZy5jb2Rl\nfWApOwogICAgICB0cnkgewogICAgICAgIGF3YWl0IGkxOG4uY2hhbmdlTGfu\ngXVsZShzZWxlY3RlZExhbmcuY29kZSk7CiAgICAgICAgc2V0U2VsZWN0ZWRM\nYW5ndWFnZUNvZGUoc2VsZWN0ZWRMYW5nLmNvZGUpOwogICAgICAgIGF3YWl0\nIHVwZGF0ZVVzZXJTZXR0aW5nKCdsYW5ndWFnZScsIHNlbGVjdGVkTGFuZy5j\nb2RlKTsKICAgICAgICBzZXRMYW5ndWFnZU1vZGFsVmlzaWJsZShmYWxzZSk7\nIC8vIENsb3NlIG1vZGFsIG9uIHNlbGVjdGlvbgogICAgICAgIGNvbnNvbGUu\nbG9nKCdTZXR0aW5nc1NjcmVlbjogTGFuZ3VhZ2Ugc2VsZWN0aW9uIHN1Y2Nl\nc3NmdWxseS4nKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25z\nb2xlLmxvZygiU2V0dGluZ3NTY3JlZW46IEZhaWxlZCB0byBjaGFuZ2UgbGFu\nZ3VhZ2U6IiwgZXJyb3IpOwogICAgICAgIEFsZXJ0LmFsZXJ0KGkxOG4udCgn\nc2V0dGluZ3MuZXJyb3JBbGVydFRpdGxlJyksIGkxOG4udCgnc2V0dGluZ3Mu\nbGFuZ3VhZ2VDaGFuZ2VFcnJvcicpKTsKICAgICAgfQogICAgfQogIGF9Owog\nIAogIGNvbnN0IHJlbmRlckNhcmRTZWN0aW9uID0gKGhlYWRlcktleTogc3Ry\naW5nLCBuZW9uQ29sb3I6IHN0cmluZywgY2hpbGRyZW46IFJlYWN0LlJlYWN0\nTm9kZSkgPT4gewogICAgY29uc29sZS5sb2coYEhvbWVTY3JlZW46IFJlbmRl\ncmluZyBjYXJkIHNlY3Rpb24gZm9yIGhlYWRlciAke2hlYWRlcktleX1gKTsK\nICAgIHJldHVybiAoCiAgICA8SW1hZ2VCYWNrZ3JvdW5kCiAgICAgIHNvdXJj\nZT17cmVxdWlyZSgnLi4vLi4vYXNzZXRzL2ltYWdlcy9wb3N0YmcucG5nJyl9\nIC8vIEVuc3VyZSB0aGlzIGltYWdlIGV4aXN0cwpICAgICAgc3R5bGU9e3N0\neWxlcy5jYXJkQ29udGFpbmVyfQogICAgICBpbWFnZVN0eWxlPXt7IG9wYWNp\ndHk6IDAuMywKICAgICAgICAgIHJlc2l6ZU1vZGU6ICdjb3ZlcncnIH19IC8v\nIEFkanVzdGVkIG9wYWNpdHkKICAgID4KICAgICAgPFZpZXcgc3R5bGU9e3N0\neWxlcy5jYXJkQ29udGVudH0+CiAgICAgICAgPFRleHQgc3R5bGU9e1tzdHls\nZXMuc2VjdGlvbkhlYWRlciwgeyBjb2xvcjoge25lb25Db2xvcj0gdGV4dFNo\nYWZvd0NvbG9yOiBuZW9uQ29sb3IgfX1dfT4KICAgICAgICAgIHsxOG4udCho\nZWFkZXJLZXkpfQogICAgICAgIDwvVGV4dD4KICAgICAgICB7Y2hpbGRyZW59\nCiAgICAgIDwvVmlldz4KICAgIDwvSW1hZ2VCYWNrZ3JvdW5kPgogICk7Cn07\nCgogIGNvbnN0IGhhbmRsZVJhdGVBcHAgPSAoKSA9PiB7CiAgICBjb25zb2xl\nLmxvZygnU2V0dGluZ3NTY3JlZW46IFJhdGUgYXBwIHByb21wdCBpbml0aWF0\nZWQuJyk7CiAgICB0cmlnZ2VySGFwdGljKCk7CiAgICBBbGVydC5hbGVydCgK\nICAgICAgaTE4bi50KCdzZXR0aW5ncy5yYXRlQXBwVGl0bGUnKSwKICAgICAgaTE4\nbi50KCdzZXR0aW5ncy5yYXRlQXBwTWVzc2FnZScpLAogICAgICBbCiAgICAg\nICAgeyB0ZXh0OiBpMThuLnQoJ3NldHRpbmdzLmNhbmNlbEJ1dHRvbicpLCBz\ndHlsZTogJ2NhbmNlbCcgfSwKICAgICAgICB7CiAgICAgICAgICAgIHRleHQ6\nIGkxOG4udCgnc2V0dGluZ3MucmF0ZUJ1dHRvbicpLAogICAgICAgICAgICBv\nblByZXNzOiAoKSA9PiB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1Nl\ndHRpbmdzU2NyZWVuOiBSYXRlIGFwcCBidXR0b24gcHJlc3NlZC4nKTsKICAg\nICAgICAgICAgICAvLyBSZXBsYWNlIHdpdGggeW91ciBhY3R1YWwgQXBwIFN0\nb3JlL1BsYXkgU3RvcmUgbGlua3MKICAgICAgICAgICAgICBjb25zdCBpb3NB\ncHBJZCA9ICdZPVJfaW9zX0FQUF9JRCc7CiAgICAgICAgICAgICAgY29uc3Qg\nYW5kcm9pZFBhY2thZ2VOYW1lID0gJ1lPVVJfQU5EUk9JRF9QQUNLQUdFX05B\nbWUnOwogICAgICAgICAgICAgIGNvbnN0IHVybCA9IFBsYXRmb3JtLk9TID09\nPSAnaW9zJwogICAgICAgICAgICAgICAgICA/IGBpdG1zLWFwcHM6Ly9hcHBz\nLmFwcGxlLmNvbS9hcHAvaWQke2lvc0FwcElkfT9hY3Rpb249d3JpdGUtcmV2\naWV3YAogICAgICAgICAgICAgICAgOiBgbWFya2V0Oi8vZGV0YWlscz9pZD0k\ne2FuZHJvaWRQYWNrYWdlTmFtZX1gOwogICAgICAgICAgICAgIGNvbnNvbGUu\nbG9nKGBTZXR0aW5nc1NjcmVlbjogQXR0ZW1wdGluZyB0byBvcGVuIFVSTDog\nJHthdXRoZW50dXJsfWApOwogICAgICAgICAgICAgIExpbmtpbmcuY2FuT3Bl\nblVSTCh1cmwpLnRoZW4oc3VwcG9ydGVkID0+IHsKICAgICAgICAgICAgICAg\nIGlmIChzdXBwb3J0ZWQpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5s\nb2coJ1NldHRpbmdzU2NyZWVuOiBVUkwgY2FuIGJlIG9wZW5lZC4gT3Blbmlu\nZyBVUkwuJyk7CiAgICAgICAgICAgICAgICAgIExpbmtpbmcub3BlblVSTCh1\ncmwpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAg\nICAgY29uc29sZS5sb2coJ1NldHRpbmdzU2NyZWVuOiBVUkwgY2Fubm90IGJl\nb3BlbmVkLiBGb2xsaW5nIGJhY2sgdG8gd2ViIFVSTC4nKTsKICAgICAgICAg\nICAgICAgICAgICBjb25zdCB3ZWJVcmwgPSBQbGF0Zm9ybS5PUyA9PT0gJ2lv\ncyd9CiAgICAgICAgICAgICAgICAgICAgID8gYGh0dHBzOi8vYXBwcy5hcHBs\nZS5jb20vYXBwL2lkJHthcHBJZ31YCicgICAgICAgICAgICAgICAgICAgIDog\nYGh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9p\nZD0ke2FuZHJvaWRQYWNrYWdlTmFtZX1gOwogICAgICAgICAgICAgICAgICAg\nIExpbmtpbmcub3BlblVSTCh3ZWJVcmwpLmNhdGNoKGVyciA9PiBBbGVydC5h\nbGVydChpMThuLnQoJ3NldHRpbmdzLmVycm9yQWxlcnRUaXRsZScpLCBpMThu\nLnQoJ3NldHRpbmdzLmNvdWxkTm90T3BlblN0b3JlVXJsJykpKTsKICAgICAg\nICAgICAgICAgfQogICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiBBbGVy\ndC5hbGVydChpMThuLnQoJ3NldHRpbmdzLmVycm9yQWxlcnRUaXRsZScpLCBp\nMThuLnQoJ3NldHRpbmdzLmNvdWxkTm90T3BlblN0b3JlVXJsJykpKTsKICAg\nICAgICAgICAgfSwKICAgICAgICB9LAogICAgICBdLAogICAgICB7IGNhbmNl\nbGFibGU6IHRydWUgfQogICAgKTsKICB9OwogCmNvbnN0IGN1cnJlbnRMYW5n\ndWFnZU5hbWUgPSBsYW5ndWFnZU9wdGlvbnMuZmluZCJsYW5nID0+IGxhbmcu\nY29kZSA9PT0gc2VsZWN0ZWRMYW5ndWFnZUNvZGUpPy5uYW1lIHx8IHNlbGVj\ndGVkTGFuZ3VhZ2VDb2RlOwogIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVl\nbjogQ3VycmVudCBsYW5ndWFnZSBuYW1lIGRldGVjdGVkOiAke2N1cnJlbnRM\nYW5ndWFnZU5hbWV9YCk7CgogIGNvbnN0IGNvbnRlbnQgPSAoCiAgICA8QW5p\nbWF0ZWQuVmlldyBzdHlsZT17eyBvcGFjaXR5OiBmYWRlQW5pbSwgcGFkZGlu\nZ0JvdHRvbTogMjAgfX0+CiAgICAgIHsvKiBQcm9maWxlICYgQWNjb3VudCBT\nZWN0aW9uICovfQogICAgICB7cmVuZGVyQ2FyZFNlY3Rpb24oJ3NldHRpbmdz\nLnByb2ZpbGVBY2NvdW50SGVhZGVyJywgJyMwMEZGRDEnLCAoCiAgICAgICAg\nPD4KICAgICAgICAgIHtjdXJyZW50VXNlciA/ICgKICAgICAgICAgICAgPFRv\ndWNoYWJsZU9wYWNpdHkKICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLnBy\nb2ZpbGVDYXJkfQogICAgICAgICAgICAgIG9uUHJlc3M9e2hhbmRsZVByb2Zp\nbGVQcmVzc30KICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxJbWFnZQog\nICAgICAgICAgICAgICAgc291cmNlPXtyZXF1aXJlKCcuLi8uLi9hc3NldHMv\naW1hZ2VzL2F2YXRhci5wbmcnKX0gLy8gRW5zdXJlIHRoaXMgaW1hZ2UgZXhp\nc3RzCiAgICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlcy5wcm9maWxlSW1h\nZ2V9CiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDxWaWV3IHN0\neWxlPXtzdHlsZXMucHJvZmlsZUluZm99PgogICAgICAgICAgICAgICAgPFRl\neHQgc3R5bGU9e3N0eWxlcy5wcm9maWxlTmFtZX0+e3VzZXJuYW1lfTwvVGV4\ndD4KICAgICAgICAgICAgICAgIDwvVmlldz4KICAgICAgICAgICAgICA8VG91\nY2hhYmxlT3BhY2l0eQogICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMu\nZWRpdFByb2ZpbGV9CiAgICAgICAgICAgICAgICAgb25QcmVzcz17aGFuZGxl\nQ2hhbmdlVXNlcm5hbWV9IC8vIENoYW5nZWQgdG8gZGlyZWN0bHkgY2FsbCBj\naGFuZ2UgdXNlcm5hbWVlCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAg\nICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVkaXRQcm9maWxlVGV4dH0+e2kx\nOG4udCgnc2V0dGluZ3MuZWRpdFByb2ZpbGVCdXR0b24nKX08L1RleHQ+CiAg\nICAgICAgICAgICAgICA8TWF0ZXJpYWxJY29ucyBuYW1lPSJlZGl0IiBzaXpl\nPXsxNn0gY29sb3I9IiMwMEU1RkYiIC8+CiAgICAgICAgICAgICAgPC9Ub3Vj\naGFibGVPcGFjaXR5PgogICAgICAgICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0\neT4KICAgICAgICAgICkgOiAoCiAgICAgICAgICAgIDxWaWV3IHN0eWxlPXtz\ndHlsZXMucHJvZmlsZUNhcmR9PgogICAgICAgICAgICAgIDxJbWFnZQogICAg\nICAgICAgICAgICBzb3VyY2U9e3JlcXVpcmUoJy4uLy4uL2Fzc2V0cy9pbWFn\nZXMvYXZhdGFyLnBuZycpfQogICAgICAgICAgICAgICAgc3R5bGU9e3N0eWxl\ncy5wcm9maWxlSW1hZ2V9CiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAg\nICA8VmlldyBzdHlsZT17c3R5bGVzLnByb2ZpbGVJbmZvfT4KICAgICAgICAg\nICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5wcm9maWxlTmFtZX0+e2kxOG4u\ndCgnc2V0dGluZ3Mubm90TG9nZ2VkSW4nKX08L1RleHQ+CiAgICAgICAgICAg\nICAgPC9WaWV3PgogICAgICAgICAgICAgIDwvVmlldz4KICAgICAgICAgICl9\nCiAgICAgICAgPC8+CiAgICAgICkpfQoKICAgICAgey8qIExhbmd1YWdlIFNl\ndHRpbmdzIFNlY3Rpb24gKi99CiAgICAgIHtyZW5kZXJDYXJkU2VjdGlvbign\nc2V0dGluZ3MubGFuZ3VhZ2VSZWdpb25IZWFkZXInLCAnI0ZGRDcwMCcsICgg\nLy8gVXNpbmcgYSBnb2xkLWxpa2UgY29sb3IgZm9yIHRoaXMgc2VjdGlvbgog\nICAgICAgIDxUb3VjaGFibGVPcGFjaXR5CiAgICAgICAgICAgIHN0eWxlPXtz\ndHlsZXMuc2V0dGluZ0l0ZW19CiAgICAgICAgICAgIG9uUHJlc3M9eygpID0+\nIHsKICAgICAgICAgICAgICAgIHRyaWdnZXJIYXB0aWMoKTsKICAgICAgICAg\nICAgICAgc2V0TGFuZ3VhZ2VNb2RhbFZpc2libGUodHJ1ZSk7CiAgICAgICAg\nICAgICAgY29uc29sZS5sb2coJ1NldHRpbmdzU2NyZWVuOiBMYW5ndWFnZSBz\nZWxlY3Rpb24gbW9kYWwgb3BlbmVkLicpOwogICAgICAgICAgICB9fQogICAg\nICAgID4KICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5pY29ufT4K\nICAgICAgICAgICAgICAgIDxJb25pY29ucyBuYW1lPSJsYW5ndWFnZS1vdXRs\naW5lIiBzaXplPXsyMn0gY29sb3I9IiNGRkQ3MDAiIC8+CiAgICAgICAgICAg\nIDwvVmlldz4KICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy5zZXR0\naW5nVGl0bGV9PntpMThuLnQoJ3NldHRpbmdzLmxhbmd1YWdlTGFiZWwnKX08\nL1RleHQ+CiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuc2V0dGlu\nZ1ZhbHVlfT57Y3VycmVudExhbmd1YWdlTmFtZX08L1RleHQ+CiAgICAgICAg\nICAgIDxJb25pY29ucyBuYW1lPSJjaGV2cm9uLWZvcndhcmQiIHNpemU9ezIw\nfSBjb2xvcj0iI0ZGRDcwMCIgLz4KICAgICAgICA8L1RvdWNoYWJsZU9wYWNp\ndHk+CiAgICAgICkpfQoKCiAgICAgIHsvKiBOb3RpZmljYXRpb25zICYgQWxl\ncnRzIFNlY3Rpb24gKi99CiAgICAgIHtyZW5kZXJDYXJkU2VjdGlvbignc2V0\ndGluZ3Mubm90aWZpY2F0aW9uc0FsZXJ0c0hlYWRlcicsICcjMDBGRjg3Jywg\nKAogICAgICAgIDw+CiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnNl\ndHRpbmdJdGVtfT4KICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5p\nY29ufT48Rm9udEF3ZXNvbWUgbmFtZT0iYmVsbC1vIiBzaXplPXsyMH0gY29s\nb3I9IiMwMEU1RkYiIC8+PC9WaWV3PgogICAgICAgICAgICA8VGV4dCBzdHls\nZT17c3R5bGVzLnNldHRpbmdUaXRsZX0+e2kxOG4udCgnc2V0dGluZ3MuZm9y\ndW1Ob3RpZmljYXRpb25zTGFiZWwnKX08L1RleHQ+CiAgICAgICAgICAgIDxT\nd2l0Y2gKICAgICAgICAgICAgICAgIHZhbHVlPXtmb3J1bU5vdGlmaWNhdGlv\nbnN9CiAgICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlPXthc3luYyAodmFs\ndWUpID0+IHsKICAgICAgICAgICAgICAgICAgdHJpZ2dlckhhcHRpYygpOwog\nICAgICAgICAgICAgICAgIHNldEZvcnVtTm90aWZpY2F0aW9ucyh2YWx1ZSk7\nCiAgICAgICAgICAgICAgICAgIGF3YWl0IHVwZGF0ZVVzZXJTZXR0aW5nKCdm\nb3J1bU5vdGlmaWNhdGlvbnMnLCB2YWx1ZSk7CiAgICAgICAgICAgICAgICAg\nIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogRm9ydW0gTm90aWZpY2F0\naW9ucyBzdGF0ZSB0b2dnbGVkIHRvOiAke3ZhbHVlfWApOwogICAgICAgICAg\nICAgIH19CiAgICAgICAgICAgICAgdGh1bWJDb2xvcj17Zm9ydW1Ob3RpZmlj\nYXRpb25zID8gJyMwMEU1RkYnIDogJyM3NzcnfQogICAgICAgICAgICAgIHRy\nYWNrQ29sb3I9e3sgZmFsc2U6ICcjMzMzJywgdHJ1ZTogJyMwMEU1RkY1NScg\nfX0KICAgICAgICAgICAgLz4KICAgICAgICAgIDwvVmlldz4KICAgICAgICAg\nIDxWaWV3IHN0eWxlPXtzdHlsZXMuc2V0dGluZ0l0ZW19PgogICAgICAgICAg\nICA8VmlldyBzdHlsZT17c3R5bGVzLmljb259PjxGb250QXdlc29tZSBuYW1l\nPSJnYW1lcGFkIiBzaXplPXsyMH0gY29sb3I9IiMwMEU1RkYiIC8+PC9WaWV3\nPgogICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnNldHRpbmdUaXRs\nZX0+e2kxOG4udCgnc2V0dGluZ3MuZ2FtZVVwZGF0ZXNMYWJlbCcpfTwvVGV4\ndD4KICAgICAgICAgICAgPFN3aXRjaAogICAgICAgICAgICAgIHZhbHVlPXtn\nYW1lVXBkYXRlc30KICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlPXthc3lu\nYyAodmFsdWUpID0+IHsKICAgICAgICAgICAgICAgIHRyaWdnZXJIYXB0aWMo\nKTsgc2V0R2FtZVVwZGF0ZXModmFsdWUpOyBhd2FpdCB1cGRhdGVVc2VyU2V0\ndGluZygnZ2FtZVVwZGF0ZXMnLCB2YWx1ZSk7CiAgICAgICAgICAgICAgICAg\nIGNvbnNvbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogR2FtZSBVdXBkYXRlcyBz\ndGF0ZSB0b2dnbGVkIHRvOiAke3ZhbHVlfWApOwogICAgICAgICAgICAgIH19\nCiAgICAgICAgICAgICAgdGh1bWJDb2xvcj17Z2FtZVVwZGF0ZXMgPyAnIzAw\nRTlGRicgOiAnIzc3NydX0KICAgICAgICAgICAgICB0cmFja0NvbG9yPXt7IGZhbHNl\nOiAnIzMzMycsIHRydWU6ICcjMDBFNUZGNTUnIH19CiAgICAgICAgICAgIC8+\nCiAgICAgICAgICA8L1ZpZXc+CiAgICAgICAgICA8VmlldyBzdHlsZT17c3R5\nbGVzLnNldHRpbmdJdGVtfT4KICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0\neWxlcy5pY29ufT48Rm9udEF3ZXNvbWUgbmFtZT0idGlja2V0IiBzaXplPXsy\nMH0gY29sb3I9IiMwMEU1RkYiIC8+PC9WaWV3PgogICAgICAgICAgICA8VGV4\ndCBzdHlsZT17c3R5bGVzLnNldHRpbmdUaXRsZX0+e2kxOG4udCgnc2V0dGlu\nZ3MucmFmZmxlUmVtaW5kZXJzTGFiZWwnKX08L1RleHQ+CiAgICAgICAgICAg\nIDxTd2l0Y2gKICAgICAgICAgICAgICAgIHZhbHVlPXtyYWZmbGVSZW1pbmRl\ncnN9CiAgICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlPXthc3luYyAodmFs\ndWUpID0+IHsKICAgICAgICAgICAgICAgICAgdHJpZ2dlckhhcHRpYygpOwog\nICAgICAgICAgICAgICAgIHNldFJhZmZsZVJlbWluZGVycyh2YWx1ZSk7CiAg\nICAgICAgICAgICAgICAgYXdhaXQgdXBkYXRlVXNlckVldHRpbmdzKCdyYWZm\nbGVSZW1pbmRlcnMnLCB2YWx1ZSk7CiAgICAgICAgICAgICAgICAgIGNvbnNv\nbGUubG9nKGBTZXR0aW5nc1NjcmVlbjogUmFmZmxlIFJlbWluZGVycyBzdGF0\nZSB0b2dnbGVkIHRvOiAke3ZhbHVlfWApOwogICAgICAgICAgICAgIH19CiAg\nICAgICAgICAgICAgdGh1bWJDb2xvcj17cmFmZmxlUmVtaW5kZXJzID8gJyMw\\n"
decoded_content = base64.b64decode(encoded_content).decode('utf-8')

# Count initial logs for accurate total
initial_log_count = decoded_content.count("console.log(")

# Add new logs
rewritten_code = decoded_content

# CustomOptionModal Logs
rewritten_code = rewritten_code.replace("const CustomOptionModal: React.FC<CustomOptionModalProps> = ({",
"""console.log("CustomOptionModal: Component mounted.");
const CustomOptionModal: React.FC<CustomOptionModalProps> = ({""")
rewritten_code = rewritten_code.replace("useRef(new Animated.Value(0)).current;",
"""useRef(new Animated.Value(0)).current;
  console.log("CustomOptionModal: Animated value initialized to 0.");""")
rewritten_code = rewritten_code.replace("Animated.timing(slideAnim, {",
"""console.log(`CustomOptionModal: Animation triggered. Visible: ${visible}.`);
    Animated.timing(slideAnim, {""")
rewritten_code = rewritten_code.replace("}).start();",
"""}).start(() => {
      console.log('CustomOptionModal: Animation completed.');
    });""")
rewritten_code = rewritten_code.replace("return () => {",
"""return () => {
       console.log('CustomOptionModal: Animation cleanup.');""")
rewritten_code = rewritten_code.replace("onClose={onClose}",
"""onClose={() => {
        console.log("CustomOptionModal: Modal requested to close.");
        onClose();
      }}""")
rewritten_code = rewritten_code.replace("onPress={onClose}",
"""onPress={() => {
          console.log(`CustomOptionModal: Background pressed, closing modal.`);
          onClose();
        }}""")
rewritten_code = rewritten_code.replace("onSelect(option);",
"""console.log('CustomOptionModal: Option selected: ' + option);
              onSelect(option);""")

# SettingsScreen Logs
rewritten_code = rewritten_code.replace("export default function SettingsScreen() {",
"""export default function SettingsScreen() {
  console.log("SettingsScreen: Component mounted.");""")
rewritten_code = rewritten_code.replace("const [username, setUsername] = useState(",
"""const [username, setUsername] = useState(
    currentUser ? currentUser.displayName || i18n.t('settings.defaultUsername') : i18n.t('settings.notLoggedIn')
  );
  console.log(`SettingsScreen: Username state initialized: ${username}`);""")
rewritten_code = rewritten_code.replace("const [selectedLanguageCode, setSelectedLanguageCode] = useState(i18n.language);",
"""const [selectedLanguageCode, setSelectedLanguageCode] = useState(i18n.language);
  console.log(`SettingsScreen: Language state initialized: ${selectedLanguageCode}`);""")
rewritten_code = rewritten_code.replace("const [languageModalVisible, setLanguageModalVisible] = useState(false);",
"""const [languageModalVisible, setLanguageModalVisible] = useState(false);
  console.log('SettingsScreen: Language modal visibility state initialized to false.');""")

rewritten_code = rewritten_code.replace("const [forumNotifications, setForumNotifications] = useState(true);",
"""const [forumNotifications, setForumNotifications] = useState(true);
  console.log(`SettingsScreen: Forum notifications state initialized: ${forumNotifications}`);""")
rewritten_code = rewritten_code.replace("const [gameUpdates, setGameUpdates] = useState(true);",
"""const [gameUpdates, setGameUpdates] = useState(true);
  console.log(`SettingsScreen: Game updates state initialized: ${gameUpdates}`);""")
rewritten_code = rewritten_code.replace("const [raffleReminders, setRaffleReminders] = useState(false);",
"""const [raffleReminders, setRaffleReminders] = useState(false);
  console.log(`SettingsScreen: Raffle reminders state initialized: ${raffleReminders}`);""")
rewritten_code = rewritten_code.replace("const [dailyChallengeReminders, setDailyChallengeReminders] = useState(true);",
"""const [dailyChallengeReminders, setDailyChallengeReminders] = useState(true);
  console.log(`SettingsScreen: Daily challenge reminders state initialized: ${dailyChallengeReminders}`);""")
rewritten_code = rewritten_code.replace("const [viewPostsOption, setViewPostsOption] = useState<'Public' | 'Friends Only' | 'Private'>('Public');",
"""const [viewPostsOption, setViewPostsOption] = useState<'Public' | 'Friends Only' | 'Private'>('Public');
  console.log(`SettingsScreen: View posts option state initialized: ${viewPostsOption}`);""")
rewritten_code = rewritten_code.replace("const [replyPostsOption, setReplyPostsOption] = useState<'Everyone' | 'Only Followers' | 'No One'>('Everyone');",
"""const [replyPostsOption, setReplyPostsOption] = useState<'Everyone' | 'Only Followers' | 'No One'>('Everyone');
  console.log(`SettingsScreen: Reply posts option state initialized: ${replyPostsOption}`);""")
rewritten_code = rewritten_code.replace("const [showReputation, setShowReputation] = useState(true);",
"""const [showReputation, setShowReputation] = useState(true);
  console.log(`SettingsScreen: Show reputation state initialized: ${showReputation}`);""")
rewritten_code = rewritten_code.replace("const [showRank, setShowRank] = useState(true);",
"""const [showRank, setShowRank] = useState(true);
  console.log(`SettingsScreen: Show rank state initialized: ${showRank}`);""")

rewritten_code = rewritten_code.replace("const [viewOptionModalVisible, setViewOptionModalVisible] = useState(false);",
"""const [viewOptionModalVisible, setViewOptionModalVisible] = useState(false);
  console.log('SettingsScreen: View option modal visibility state initialized to false.');""")
rewritten_code = rewritten_code.replace("const [replyOptionModalVisible, setReplyOptionModalVisible] = useState(false);",
"""const [replyOptionModalVisible, setReplyOptionModalVisible] = useState(false);
  console.log('SettingsScreen: Reply option modal visibility state initialized to false.');""")

rewritten_code = rewritten_code.replace("Animated.timing(fadeAnim, {",
"""console.log("SettingsScreen: Fade animation triggered.");
    Animated.timing(fadeAnim, {""")
rewritten_code = rewritten_code.replace("}).start();",
"""}).start(() => {
      console.log('SettingsScreen: Fade animation completed.');
    });""")
rewritten_code = rewritten_code.replace("}, []);",
"""    return () => {
      console.log('SettingsScreen: Fade animation cleanup.');
    };
  }, []);""")

rewritten_code = rewritten_code.replace("useEffect(() => {",
"""useEffect(() => {
    console.log('SettingsScreen: useEffect triggered for data fetching and language initialization.');""")
rewritten_code = rewritten_code.replace("if (currentUser) {",
"""if (currentUser) {
      console.log(`SettingsScreen: Current user exists, fetching document for UID: ${currentUser.uid}.`);""")
rewritten_code = rewritten_code.replace("const userDocRef = doc(db, 'users', currentUser.uid);",
"""const userDocRef = doc(db, 'users', currentUser.uid);
      console.log('SettingsScreen: Setting up Firestore snapshot listener.');""")
rewritten_code = rewritten_code.replace("const unsubscribe = onSnapshot(userDocRef, (docSnapshot) => {",
"""const unsubscribe = onSnapshot(userDocRef, (docSnapshot) => {
        console.log('SettingsScreen: Firestore data snapshot received.');""")
rewritten_code = rewritten_code.replace("if (data) {",
"""if (data) {
          console.log(`SettingsScreen: User data found: ${JSON.stringify(data)}.`);""")
rewritten_code = rewritten_code.replace("setUsername(data.username ?? (currentUser.displayName || i18n.t('settings.defaultUsername')));",
"""setUsername(data.username ?? (currentUser.displayName || i18n.t('settings.defaultUsername')));
          console.log(`SettingsScreen: Username state updated to: ${data.username ?? (currentUser.displayName || i18n.t('settings.defaultUsername'))}`);""")
rewritten_code = rewritten_code.replace("setForumNotifications(data.forumNotifications ?? true);",
"""setForumNotifications(data.forumNotifications ?? true);
          console.log(`SettingsScreen: Forum notifications state updated: ${data.forumNotifications ?? true}`);""")
rewritten_code = rewritten_code.replace("setGameUpdates(data.gameUpdates ?? true);",
"""setGameUpdates(data.gameUpdates ?? true);
          console.log(`SettingsScreen: Game updates state updated: ${data.gameUpdates ?? true}`);""")
rewritten_code = rewritten_code.replace("setRaffleReminders(data.raffleReminders ?? false);",
"""setRaffleReminders(data.raffleReminders ?? false);
          console.log(`SettingsScreen: Raffle reminders state updated: ${data.raffleReminders ?? false}`);""")
rewritten_code = rewritten_code.replace("setDailyChallengeReminders(data.dailyChallengeReminders ?? true);",
"""setDailyChallengeReminders(data.dailyChallengeReminders ?? true);
          console.log(`SettingsScreen: Daily challenge reminders state updated: ${data.dailyChallengeReminders ?? true}`);""")
rewritten_code = rewritten_code.replace("setViewPostsOption(data.viewPostsOption ?? 'Public');",
"""setViewPostsOption(data.viewPostsOption ?? 'Public');
          console.log(`SettingsScreen: View posts option state updated: ${data.viewPostsOption ?? 'Public'}`);""")
rewritten_code = rewritten_code.replace("setReplyPostsOption(data.replyPostsOption ?? 'Everyone');",
"""setReplyPostsOption(data.replyPostsOption ?? 'Everyone');
          console.log(`SettingsScreen: Reply posts option state updated: ${data.replyPostsOption ?? 'Everyone'}`);""")
rewritten_code = rewritten_code.replace("setShowReputation(data.showReputation ?? true);",
"""setShowReputation(data.showReputation ?? true);
          console.log(`SettingsScreen: Show reputation state updated: ${data.showReputation ?? true}`);""")
rewritten_code = rewritten_code.replace("setShowRank(data.showRank ?? true);",
"""setShowRank(data.showRank ?? true);
          console.log(`SettingsScreen: Show rank state updated: ${data.showRank ?? true}`);""")
rewritten_code = rewritten_code.replace("if (savedLangCode !== i18n.language) {",
"""if (savedLangCode !== i18n.language) {
            console.log(`SettingsScreen: Language mismatch. Changing i18n language from ${i18n.language} to ${savedLangCode}.`);""")
rewritten_code = rewritten_code.replace("i18n.changeLanguage(savedLangCode).then(() => {",
"""i18n.changeLanguage(savedLangCode).then(() => {
              console.log('SettingsScreen: i18n language changed successfully.');""")
rewritten_code = rewritten_code.replace("setSelectedLanguageCode(savedLangCode);",
"""setSelectedLanguageCode(savedLangCode);
              console.log(`SettingsScreen: Selected language code state updated to: ${savedLangCode}.`);""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
            console.log('SettingsScreen: Language already matches current i18n language.');""")
rewritten_code = rewritten_code.replace("setSelectedLanguageCode(savedLangCode);",
"""setSelectedLanguageCode(savedLangCode);
            console.log(`SettingsScreen: Selected language code state updated to: ${savedLangCode}.`);""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
          console.log('SettingsScreen: No user data found in Firestore. Setting default language to "en".');""")
rewritten_code = rewritten_code.replace("if (i18n.language !== 'en') {",
"""if (i18n.language !== 'en') {
            console.log('SettingsScreen: i18n language not "en". Changing to "en".');""")
rewritten_code = rewritten_code.replace("i18n.changeLanguage('en').then(() => {",
"""i18n.changeLanguage('en').then(() => {
              console.log('SettingsScreen: Default language changed to "en".');""")
rewritten_code = rewritten_code.replace("setSelectedLanguageCode('en');",
"""setSelectedLanguageCode('en');
              console.log('SettingsScreen: Selected language code state updated to "en".');""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
            console.log('SettingsScreen: Default language already "en".');""")
rewritten_code = rewritten_code.replace("setSelectedLanguageCode('en');",
"""setSelectedLanguageCode('en');
            console.log('SettingsScreen: Selected language code state updated to "en".');""")
rewritten_code = rewritten_code.replace("return () => unsubscribe();",
"""return () => {
        console.log('SettingsScreen: Firestore snapshot listener unsubscribed.');
        unsubscribe();
      };""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
      console.log('SettingsScreen: No current user. Handling for non-logged-in user.');""")
rewritten_code = rewritten_code.replace("if (i18n.language !== currentAppLang) {",
"""if (i18n.language !== currentAppLang) {
        console.log(`SettingsScreen: i18n language does not match current app language. Changing i18n to ${currentAppLang}.`);""")
rewritten_code = rewritten_code.replace("i18n.changeLanguage(currentAppLang);",
"""i18n.changeLanguage(currentAppLang);
      }""")
rewritten_code = rewritten_code.replace("}, [currentUser]);",
"""}, [currentUser]);""")

rewritten_code = rewritten_code.replace("const updateUsersSetting = async (field: string, value: any) => {",
"""const updateUserSetting = async (field: string, value: any) => {
  console.log(`SettingsScreen: updateUserSetting called for field '${field}' with value '${value}'.`);""")
rewritten_code = rewritten_code.replace("if (currentUser) {",
"""if (currentUser) {
    console.log('SettingsScreen: User is logged in, proceeding with update.');""")
rewritten_code = rewritten_code.replace("try {",
"""try {
      console.log(`SettingsScreen: Attempting to update user document in Firestore. Field: ${field}, Value: ${value}.`);""")
rewritten_code = rewritten_code.replace("await updateDoc(doc(db, 'users', currentUser.uid), { [field]: value });",
"""await updateDoc(doc(db, 'users', currentUser.uid), { [field]: value });
      console.log(`SettingsScreen: User setting '${field}' updated successfully to '${value}'.`);""")
rewritten_code = rewritten_code.replace("} catch (error: any) {",
"""} catch (error: any) {
      console.log(`SettingsScreen: Error updating user setting for field '${field}': ${error.message}.`);""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
    console.log('SettingsScreen: User not logged in. Cannot update settings.');""")

rewritten_code = rewritten_code.replace("const triggerHaptic = () => {",
"""const triggerHaptic = () => {
  console.log('SettingsScreen: Haptic feedback triggered.');""")

rewritten_code = rewritten_code.replace("const handleProfilePress = () => {",
"""const handleProfilePress = () => {
  console.log('SettingsScreen: Profile card pressed.');""")
rewritten_code = rewritten_code.replace("router.push('/screens/UserProfileScreen');",
"""router.push('/screens/UserProfileScreen');
  console.log('SettingsScreen: Navigation to UserProfileScreen initiated.');""")

rewritten_code = rewritten_code.replace("const handleChangeUsername = () => {",
"""const handleChangeUsername = () => {
  console.log('SettingsScreen: Change username button pressed. Displaying alert prompt.');""")
rewritten_code = rewritten_code.replace("Alert.prompt(",
"""Alert.prompt(""")
rewritten_code = rewritten_code.replace("if (!newUsername || newUsername.trim() === '') {",
"""if (!newUsername || newUsername.trim() === '') {
          console.log('SettingsScreen: Username input validation failed: Username cannot be empty.');""")
rewritten_code = rewritten_code.replace("Alert.alert(i18n.t('settings.invalidInputTitle'), i18n.t('settings.usernameCannotBeEmpty'));",
"""Alert.alert(i18n.t('settings.invalidInputTitle'), i18n.t('settings.usernameCannotBeEmpty'));
          console.log('SettingsScreen: Invalid input alert shown.');""")
rewritten_code = rewritten_code.replace("if (currentUser) {",
"""if (currentUser) {
          console.log(`SettingsScreen: Attempting to update username to: ${newUsername}.`);""")
rewritten_code = rewritten_code.replace("try {",
"""try {
            await updateProfile(currentUser, { displayName: newUsername });
            setUsername(newUsername);
            await updateUserSetting('username', newUsername);
            Alert.alert(i18n.t('settings.successAlertTitle'), i18n.t('settings.usernameUpdatedSuccess'));
            console.log(`SettingsScreen: Username updated successfully to ${newUsername}.`);""")
rewritten_code = rewritten_code.replace("} catch (error: any) {",
"""} catch (error: any) {
            console.log(`SettingsScreen: Error updating username: ${error.message}.`);
            Alert.alert(i18n.t('settings.errorAlertTitle'), error.message);""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
          console.log('SettingsScreen: User not logged in. Cannot change username.');""")
rewritten_code = rewritten_code.replace("Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.notLoggedInMessage'));",
"""Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.notLoggedInMessage'));
          console.log('SettingsScreen: Not logged in alert shown.');""")

rewritten_code = rewritten_code.replace("const handleLanguageSelect = async (selectedName: string) => {",
"""const handleLanguageSelect = async (selectedName: string) => {
  console.log(`SettingsScreen: handleLanguageSelect called with: ${selectedName}.`);""")
rewritten_code = rewritten_code.replace("if (selectedLang) {",
"""if (selectedLang) {
    console.log(`SettingsScreen: Found language object for selected name. Code: ${selectedLang.code}.`);""")
rewritten_code = rewritten_code.replace("try {",
"""try {
      console.log(`SettingsScreen: Attempting to change i18n language to: ${selectedLang.code}.`);""")
rewritten_code = rewritten_code.replace("await i18n.changeLanguage(selectedLang.code);",
"""await i18n.changeLanguage(selectedLang.code);
      setSelectedLanguageCode(selectedLang.code);
      await updateUserSetting('language', selectedLang.code);
      setLanguageModalVisible(false); // Close modal on selection
      console.log(`SettingsScreen: Language changed successfully to ${selectedLang.code}.`);""")
rewritten_code = rewritten_code.replace("} catch (error) {",
"""} catch (error) {
      console.log("SettingsScreen: Failed to change language: " + error);
      Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.languageChangeError'));""")
rewritten_code = rewritten_code.replace("}",
"""} else {
    console.log(`SettingsScreen: Language object not found for selected name: ${selectedName}.`);
  }""")

rewritten_code = rewritten_code.replace("const renderCardSection = (headerKey: string, neonColor: string, children: React.ReactNode) => (",
"""const renderCardSection = (headerKey: string, neonColor: string, children: React.ReactNode) => {
  console.log(`SettingsScreen: renderCardSection called for header: ${headerKey}.`);
  return (""")
rewritten_code = rewritten_code.replace(");",
""");
};""")

rewritten_code = rewritten_code.replace("const handleRateApp = () => {",
"""const handleRateApp = () => {
  console.log('SettingsScreen: Rate App button pressed. Displaying alert.');""")
rewritten_code = rewritten_code.replace("onPress: () => {",
"""onPress: () => {
            console.log('SettingsScreen: Rate button pressed in alert.');""")
rewritten_code = rewritten_code.replace("console.log(`SettingsScreen: Attempting to open URL: ${url}.`);",
"""console.log(`SettingsScreen: Attempting to open URL: ${url}.`);""")
rewritten_code = rewritten_code.replace("Linking.canOpenURL(url).then(supported => {",
"""Linking.canOpenURL(url).then(supported => {
              console.log(`SettingsScreen: Can open URL: ${supported}.`);""")
rewritten_code = rewritten_code.replace("if (supported) {",
"""if (supported) {
                console.log('SettingsScreen: URL is supported. Opening URL.');""")
rewritten_code = rewritten_code.replace("} else {",
"""} else {
                console.log('SettingsScreen: URL is not supported. Falling back to web URL.');""")
rewritten_code = rewritten_code.replace("Linking.openURL(webUrl).catch(err => Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.couldNotOpenStoreUrl')));",
"""Linking.openURL(webUrl).catch(err => {
                  console.log(`SettingsScreen: Error opening web URL: ${err}`);
                  Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.couldNotOpenStoreUrl'));
                });""")
rewritten_code = rewritten_code.replace("}).catch(err => Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.couldNotOpenStoreUrl')));",
"""}).catch(err => {
            console.log(`SettingsScreen: Error checking URL support: ${err}`);
            Alert.alert(i18n.t('settings.errorAlertTitle'), i18n.t('settings.couldNotOpenStoreUrl'));
          });""")

rewritten_code = rewritten_code.replace("const currentLanguageName = languageOptions.find(lang => lang.code === selectedLanguageCode)?.name || selectedLanguageCode;",
"""const currentLanguageName = languageOptions.find(lang => lang.code === selectedLanguageCode)?.name || selectedLanguageCode;
  console.log(`SettingsScreen: Current language name resolved: ${currentLanguageName}.`);""")

rewritten_code = rewritten_code.replace("onPress={() => { triggerHaptic(); setLanguageModalVisible(true); }}",
"""onPress={() => {
              console.log('SettingsScreen: Language setting item pressed. Opening language modal.');
              triggerHaptic();
              setLanguageModalVisible(true);
            }}""")

# Notification & Alerts Section
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setForumNotifications(value); await updateUserSetting('forumNotifications', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Forum Notifications toggle changed to: ${value}.`);
                  triggerHaptic();
                  setForumNotifications(value);
                  await updateUserSetting('forumNotifications', value);
                }}""")
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setGameUpdates(value); await updateUserSetting('gameUpdates', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Game Updates toggle changed to: ${value}.`);
                  triggerHaptic();
                  setGameUpdates(value);
                  await updateUserSetting('gameUpdates', value);
                }}""")
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setRaffleReminders(value); await updateUserSetting('raffleReminders', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Raffle Reminders toggle changed to: ${value}.`);
                  triggerHaptic();
                  setRaffleReminders(value);
                  await updateUserSetting('raffleReminders', value);
                }}""")
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setDailyChallengeReminders(value); await updateUserSetting('dailyChallengeReminders', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Daily Challenge Reminders toggle changed to: ${value}.`);
                  triggerHaptic();
                  setDailyChallengeReminders(value);
                  await updateUserSetting('dailyChallengeReminders', value);
                }}""")

# Privacy & Security Section
rewritten_code = rewritten_code.replace("onPress={() => { triggerHaptic(); setViewOptionModalVisible(true); }}",
"""onPress={() => {
              console.log('SettingsScreen: "Who Can View My Posts" setting item pressed. Opening modal.');
              triggerHaptic();
              setViewOptionModalVisible(true);
            }}""")
rewritten_code = rewritten_code.replace("onPress={() => { triggerHaptic(); setReplyOptionModalVisible(true); }}",
"""onPress={() => {
              console.log('SettingsScreen: "Who Can Reply to My Posts" setting item pressed. Opening modal.');
              triggerHaptic();
              setReplyOptionModalVisible(true);
            }}""")
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setShowReputation(value); await updateUserSetting('showReputation', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Show Reputation toggle changed to: ${value}.`);
                  triggerHaptic();
                  setShowReputation(value);
                  await updateUserSetting('showReputation', value);
                }}""")
rewritten_code = rewritten_code.replace("onValueChange={async (value) => { triggerHaptic(); setShowRank(value); await updateUserSetting('showRank', value); }}",
"""onValueChange={async (value) => {
                  console.log(`SettingsScreen: Show Rank toggle changed to: ${value}.`);
                  triggerHaptic();
                  setShowRank(value);
                  await updateUserSetting('showRank', value);
                }}""")

# App Info & Legal Section
rewritten_code = rewritten_code.replace("onPress={() => { triggerHaptic(); router.push('/screens/AboutApp'); }}",
"""onPress={() => {
              console.log('SettingsScreen: About App setting item pressed. Navigating.');
              triggerHaptic();
              router.push('/screens/AboutApp');
            }}""")
rewritten_code = rewritten_code.replace("onPress={() => { triggerHaptic(); router.push('/screens/PrivacyPolicy'); }}",
"""onPress={() => {
              console.log('SettingsScreen: Privacy Policy setting item pressed. Navigating.');
              triggerHaptic();
              router.push('/screens/PrivacyPolicy');
            }}""")
rewritten_code = rewritten_code.replace("onPress={handleRateApp}>",
"""onPress={handleRateApp}>
            console.log('SettingsScreen: Rate App setting item pressed.');""")

# Modals close logs
rewritten_code = rewritten_code.replace("onClose={() => setLanguageModalVisible(false)}",
"""onClose={() => {
        console.log('SettingsScreen: Language selection modal closed.');
        setLanguageModalVisible(false);
      }}""")
rewritten_code = rewritten_code.replace("onClose={(() => setViewOptionModalVisible(false))}",
"""onClose={(() => {
        console.log('SettingsScreen: View posts option modal closed.');
        setViewOptionModalVisible(false);
      })}""")
rewritten_code = rewritten_code.replace("onClose={(() => setReplyOptionModalVisible(false))}",
"""onClose={(() => {
        console.log('SettingsScreen: Reply posts option modal closed.');
        setReplyOptionModalVisible(false);
      })}""")

rewritten_code = rewritten_code.replace("setViewPostsOption(originalOptionKey);",
"""setViewPostsOption(originalOptionKey);
          console.log(`SettingsScreen: View Posts Option state updated to: ${viewPostsOption}`);""")
rewritten_code = rewritten_code.replace("setReplyPostsOption(originalOptionKey);",
"""setReplyPostsOption(originalOptionKey);
          console.log(`SettingsScreen: Reply Posts Option state updated to: ${replyPostsOption}`);""")

# Calculate total logs inserted
total_logs_inserted = rewritten_code.count("console.log(")

print(f"""// REWRITTEN FILE: app/app/screens/Settings.tsx
// TOTAL_LOGS_INSERTED: {total_logs_inserted}
// COMPONENT_NAME: SettingsScreen

{rewritten_code}""")
```
